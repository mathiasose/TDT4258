#include "font.h"
#define NUM_CHARS 91
char characters[NUM_CHARS] = {
    '\0', '!', '"', '#', '$', '%', '&', '|', '(', ')', '*', '+', ',', '-', '.',
    '/', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<', '=',
    '>', '?', '@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L',
    'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[',
    '\\', ']', '^', '_', '\'', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',
    'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y',
    'z'
    };

ppm_image_t* main_pbm;

int init_fonts() 
{
    // Allocate memory for pbm
    main_pbm = (ppm_image_t*)malloc(sizeof(ppm_image_t); 
    // Attempt to set main font
    if (path_to_ppm("/lib/game/res/font/font_small.pbm", main_pbm) == EXIT_FAILURE) {
        printf("Error: Unable to load font.\n" );
        return EXIT_FAILURE;
    }
    return EXIT_SUCCESS;
}

/*
 * path_to_font - will build a font given a path to a compatible .pbm.
 */

int path_to_ppm(char* path, ppm_image_t* ppm) 
{
    char buff[16];
    FILE* f_ptr;
    // Open file
    if ((f_ptr = fopen(path, "rb")) == NULL) {
        printf("Error: failed to open file.\n");
        return EXIT_FAILURE;
    }

    if (!

    fclose(f_ptr);
    return EXIT_SUCCESS;
}
